<<<<<<< .mine
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package storagecontrol.utility;

import net.Message;

/**
 *
 * @author Sameer
 */
public class Utility {

    private static final String[] ZEROS4 = {"", "0", "00", "000", "0000"};

    public static String pad4(int length) {
        if (length < 0 || length > 999) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS3[4 - s.length()] + s;
        return s;
    }
    private static final String[] ZEROS3 = {"", "0", "00", "000"};

    public static String pad3(int length) {
        if (length < 0 || length > 999) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS3[3 - s.length()] + s;
        return s;
    }
    private static final String[] ZEROS2 = {"", "0", "00"};

    public static String pad2(int length) {
        if (length < 0 || length > 99) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS2[2 - s.length()] + s;
        return s;
    }

    public static Message messageSplitter(String strCommand) {
        Message objmessage = new Message();
        try {
            objmessage.setSender(strCommand.substring(0, 2));//sender
            objmessage.setReceiver(strCommand.substring(2, 4));//reciever
            objmessage.setCommand(strCommand.substring(4, 8));//command
            objmessage.setMsgId(strCommand.substring(8, 21));//Message ID
            objmessage.setPayload(strCommand.substring(25));//Payload

        } catch (StringIndexOutOfBoundsException ex) {
            System.out.println(ex.toString());
        }
        return objmessage;
    }
}
=======
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package storagecontrol.utility;

import net.Message;

/**
 *
 * @author Sameer
 */
public class Utility {

    private static final String[] ZEROS4 = {"", "0", "00", "000", "0000"};

    public static String pad4(int length) {
        if (length < 0 || length > 999) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS3[4 - s.length()] + s;
        return s;
    }
    private static final String[] ZEROS3 = {"", "0", "00", "000"};

    public static String pad3(int length) {
        if (length < 0 || length > 999) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS3[3 - s.length()] + s;
        return s;
    }
    private static final String[] ZEROS2 = {"", "0", "00"};

    public static String pad2(int length) {
        if (length < 0 || length > 99) {
            throw new IllegalArgumentException("out of range");
        }
        String s = Integer.toString(length);
        s = ZEROS2[2 - s.length()] + s;
        return s;
    }

    public static Message messageSplitter(String strCommand) {
        Message objmessage = new Message();
        try {
            objmessage.setSender(strCommand.substring(0, 2));//sender
            objmessage.setReceiver(strCommand.substring(2, 4));//reciever
            objmessage.setCommand(strCommand.substring(4, 8));//command
            objmessage.setMsgId(strCommand.substring(8, 21));//Message ID
            objmessage.setPayload(strCommand.substring(25));//Payload

        } catch (StringIndexOutOfBoundsException ex) {
            System.out.println(ex.toString());
        }
        return objmessage;
    }

    public static String messageGenerator(Message objmessage) {
        String Message = "";
        try {
            Message = Message + objmessage.getSender();
            Message = Message + objmessage.getReceiver();
            Message = Message + objmessage.getCommand();
            Message = Message + objmessage.getMsdId();
            Message = Message + objmessage.getMsdId();
            Message = Message + pad4(objmessage.getPayload().length());
            Message = Message + objmessage.getPayload();
        } catch (UnknownError ex) {
            System.out.println(ex.toString());
        }
        return Message.trim();
    }
}
>>>>>>> .r61
